[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://misc/wipe.png" type="Texture" id=1]
[ext_resource path="res://splash/logotype_1280.png" type="Texture" id=2]
[ext_resource path="res://splash/godot_1280.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_4;
uniform float   wipe_offset;

//------------------------

void vertex() {
// Output:0
}

//------------------------

void fragment() {
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

	vec3 n_out6p0 = vec3(UV, 0.0);

	vec3 n_in7p1 = vec3(1.00000, 3.00000, 1.00000);
	vec3 n_out7p0 = n_out6p0 / n_in7p1;

    float wipe_offset_clamped = clamp(wipe_offset,0.0,1.0);
    n_out7p0.y += wipe_offset_clamped;
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out7p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

	vec3 n_out5p0 = mix(n_out3p0, n_out2p0, n_out4p0);
    
    float fade_in = (clamp(wipe_offset, -0.5, -0.250)+0.5) * 4.0;
    float fade_out = (1.25 - clamp(wipe_offset, 1.0, 1.25)) * 4.0;
	COLOR.rgb = n_out5p0;
    COLOR.rgb *= fade_in;
    COLOR.rgb *= fade_out;
}

//------------------------

void light() {
// Output:0

}
"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/wipe_offset = -0.04
shader_param/tex_frg_3 = ExtResource( 2 )
shader_param/tex_frg_2 = ExtResource( 3 )
shader_param/tex_frg_4 = ExtResource( 1 )
